//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsursoWeb.ServiceReferenceConcurso {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceConcurso.IConcursos")]
    public interface IConcursos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultaConcurso", ReplyAction="http://tempuri.org/IConcursos/ConsultaConcursoResponse")]
        Entidades.Concurso[] ConsultaConcurso();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultaConcurso", ReplyAction="http://tempuri.org/IConcursos/ConsultaConcursoResponse")]
        System.Threading.Tasks.Task<Entidades.Concurso[]> ConsultaConcursoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/Top5Ranking", ReplyAction="http://tempuri.org/IConcursos/Top5RankingResponse")]
        Entidades.Ranking[] Top5Ranking(string Identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/Top5Ranking", ReplyAction="http://tempuri.org/IConcursos/Top5RankingResponse")]
        System.Threading.Tasks.Task<Entidades.Ranking[]> Top5RankingAsync(string Identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultarCampanas", ReplyAction="http://tempuri.org/IConcursos/ConsultarCampanasResponse")]
        Entidades.Campana[] ConsultarCampanas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultarCampanas", ReplyAction="http://tempuri.org/IConcursos/ConsultarCampanasResponse")]
        System.Threading.Tasks.Task<Entidades.Campana[]> ConsultarCampanasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultaLogin", ReplyAction="http://tempuri.org/IConcursos/ConsultaLoginResponse")]
        Entidades.Usuario ConsultaLogin(string Identificacion, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/ConsultaLogin", ReplyAction="http://tempuri.org/IConcursos/ConsultaLoginResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> ConsultaLoginAsync(string Identificacion, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarDispositivo", ReplyAction="http://tempuri.org/IConcursos/RegistrarDispositivoResponse")]
        void RegistrarDispositivo(string Identificacion, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarDispositivo", ReplyAction="http://tempuri.org/IConcursos/RegistrarDispositivoResponse")]
        System.Threading.Tasks.Task RegistrarDispositivoAsync(string Identificacion, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarUsuario", ReplyAction="http://tempuri.org/IConcursos/RegistrarUsuarioResponse")]
        void RegistrarUsuario(string Identificacion, string Nombre, System.DateTime FechaCierre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarUsuario", ReplyAction="http://tempuri.org/IConcursos/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task RegistrarUsuarioAsync(string Identificacion, string Nombre, System.DateTime FechaCierre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarRanking", ReplyAction="http://tempuri.org/IConcursos/RegistrarRankingResponse")]
        void RegistrarRanking(string Identificacion, string ValorAnterior, string ValorActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursos/RegistrarRanking", ReplyAction="http://tempuri.org/IConcursos/RegistrarRankingResponse")]
        System.Threading.Tasks.Task RegistrarRankingAsync(string Identificacion, string ValorAnterior, string ValorActual);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConcursosChannel : ConsursoWeb.ServiceReferenceConcurso.IConcursos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConcursosClient : System.ServiceModel.ClientBase<ConsursoWeb.ServiceReferenceConcurso.IConcursos>, ConsursoWeb.ServiceReferenceConcurso.IConcursos {
        
        public ConcursosClient() {
        }
        
        public ConcursosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConcursosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConcursosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConcursosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Entidades.Concurso[] ConsultaConcurso() {
            return base.Channel.ConsultaConcurso();
        }
        
        public System.Threading.Tasks.Task<Entidades.Concurso[]> ConsultaConcursoAsync() {
            return base.Channel.ConsultaConcursoAsync();
        }
        
        public Entidades.Ranking[] Top5Ranking(string Identificacion) {
            return base.Channel.Top5Ranking(Identificacion);
        }
        
        public System.Threading.Tasks.Task<Entidades.Ranking[]> Top5RankingAsync(string Identificacion) {
            return base.Channel.Top5RankingAsync(Identificacion);
        }
        
        public Entidades.Campana[] ConsultarCampanas() {
            return base.Channel.ConsultarCampanas();
        }
        
        public System.Threading.Tasks.Task<Entidades.Campana[]> ConsultarCampanasAsync() {
            return base.Channel.ConsultarCampanasAsync();
        }
        
        public Entidades.Usuario ConsultaLogin(string Identificacion, string PassWord) {
            return base.Channel.ConsultaLogin(Identificacion, PassWord);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> ConsultaLoginAsync(string Identificacion, string PassWord) {
            return base.Channel.ConsultaLoginAsync(Identificacion, PassWord);
        }
        
        public void RegistrarDispositivo(string Identificacion, string Token) {
            base.Channel.RegistrarDispositivo(Identificacion, Token);
        }
        
        public System.Threading.Tasks.Task RegistrarDispositivoAsync(string Identificacion, string Token) {
            return base.Channel.RegistrarDispositivoAsync(Identificacion, Token);
        }
        
        public void RegistrarUsuario(string Identificacion, string Nombre, System.DateTime FechaCierre) {
            base.Channel.RegistrarUsuario(Identificacion, Nombre, FechaCierre);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioAsync(string Identificacion, string Nombre, System.DateTime FechaCierre) {
            return base.Channel.RegistrarUsuarioAsync(Identificacion, Nombre, FechaCierre);
        }
        
        public void RegistrarRanking(string Identificacion, string ValorAnterior, string ValorActual) {
            base.Channel.RegistrarRanking(Identificacion, ValorAnterior, ValorActual);
        }
        
        public System.Threading.Tasks.Task RegistrarRankingAsync(string Identificacion, string ValorAnterior, string ValorActual) {
            return base.Channel.RegistrarRankingAsync(Identificacion, ValorAnterior, ValorActual);
        }
    }
}
